
const postFilter = async (req, res) => {
    try {
        console.log(req.params)
        console.log(req.query)
    //     const c = req.body.color ? req.body.color : 'white' ;
    //     const filterColor = req.body.color 
    //     const filterBrand = req.body.brand 
    //     const filterGender = req.body.gender 
    //     const query = {    
    //         retailPrice: {  $gte: Number(req.body.minAmount) || 0, $lte: Number(req.body.maxAmount) || 5000},
        
    //     } 

    //     // check for the filter values and add them to the query
    //     if (filterColor !== undefined){
    //         query.colorway = new RegExp(filterColor, 'i')
    //     }

    //     if (filterBrand !== undefined){
    //         query.brand = new RegExp(filterBrand, 'i')
    //     }

    //     if (filterGender !== undefined){
    //         query.gender = filterGender
    //     }
    //    console.log('query =', query)
    //     const catalog = await Products.find();
    //     const allBrands = []
    //     const allGenders = []
    //     const allColors = []
    //     for(prod in catalog){
    //         allBrands.push(catalog[prod].brand)
    //         allGenders.push(catalog[prod].gender)
    //         allColors.push(catalog[prod].colorway)
    //     }
    //     // get the unique values
    //     const brands = [...new Set(allBrands)];
    //     const genders = [...new Set(allGenders)];

    //     // get the filterQuery to display
    //     const filterQuery = {
    //         brand: req.body.brand,
    //         color: req.body.color,
    //         gender: req.body.gender,
    //         retailPrice: {  $gte: Number(req.body.minAmount) || 0, $lte: Number(req.body.maxAmount) || 5000} 
    //     }

    //     console.log('FilterQuery:',filterQuery)
    
    //     // pagination
    //     const page = req.params.page || 1
    //     const perPage = 20;
    //     await Products.find(query)
    //     .skip((perPage * page) - perPage)
    //     .limit(perPage)
    //     .exec((err, products) => {
    //         Products.find(query).count().exec((err, count) => {
    //             console.log(count)
    //             if (err) return next(err)
    //             res.render('shop/catalog', {
    //                 title: 'Simpleton',
    //                 user: req.user,
    //                 products: products,
    //                 current: page,
    //                 pages: Math.ceil(count / perPage),
    //                 brands: brands,
    //                 genders: genders,
    //                 colors: colors,
    //                 search: true,
    //                 filter: filterQuery
    //             })
    //         })
    //     })

  
        
       
    } catch (err) {
        
    }
}
